---
backend:
  enabled: true
  fullnameOverride: "materialpass-edc-provider-backend"

postgres:
  enabled: true
  fullnameOverride: "provider-postgresql"
  auth:
    password: "psql_password"
    username: &psqlUsername "postgresql_sandbox_user"
    database: "edc"
  persistence:
    enabled: true

dataplane:
  enabled: true
  fullnameOverride: "materialpass-edc-provider-dataplane"
  image:
    repository: ghcr.io/catenax-ng/product-edc/edc-dataplane-hashicorp-vault
    tag: 0.1.1
    pullPolicy: IfNotPresent
  envSecretName: "provider-dataplane-secret"
  edc:
    endpoints:
      default:
        port: 8080
        path: /provider/dataplane/api
      public:
        port: 8185
        path: /provider/dataplane/api/public
      control:
        port: 9999
        path: /provider/dataplane/api/control
      metrics:
        port: 9090
        path: /provider/dataplane/metrics
  ingresses:
    - enabled: true
      hostname: "materialpass.int.demo.catena-x.net"
      endpoints:
        - default
        - public
        - control
        - metrics
      className: "nginx"
      tls:
        # -- Enables TLS on the ingress resource
        enabled: true
        # -- If present overwrites the default secret name
        secretName: "tls-secret"
  opentelemetry:
    properties: |-
      otel.javaagent.enabled=false
      otel.javaagent.debug=false
  env:
    JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044"
    EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://materialpass-edc-provider-controlplane:8182/provider/controlplane/validation

    EDC_VAULT_HASHICORP_URL: https://vault.demo.catena-x.net
    EDC_VAULT_HASHICORP_API_SECRET_PATH: /v1/material-pass
    EDC_VAULT_HASHICORP_TOKEN: s.hYFLHf9sH9Qclz6iZ0iAoLIW
    EDC_OAUTH_TOKEN_URL: https://daps1.int.demo.catena-x.net/token
    EDC_OAUTH_PROVIDER_JWKS_URL: https://daps1.int.demo.catena-x.net/.well-known/jwks.json 
    EDC_OAUTH_PROVIDER_AUDIENCE: idsc:IDS_CONNECTORS_ALL
    EDC_VAULT_HASHICORP_HEALTH_CHECK_STANDBY_OK: "true"

controlplane:
  enabled: true
  fullnameOverride: "materialpass-edc-provider-controlplane"
  image:
    repository: ghcr.io/catenax-ng/product-edc/edc-controlplane-postgresql-hashicorp-vault
    tag: 0.1.1
    pullPolicy: IfNotPresent
  edc:
    endpoints:
      default:
        port: 8080
        path: /provider/controlplane/api
      data:
        port: 8181
        path: /provider/controlplane/data
      validation:
        port: 8182
        path: /provider/controlplane/validation
      control:
        port: 9999
        path: /provider/controlplane/api/control
      ids:
        port: 8282
        path: /provider/api/v1/ids
      metrics:
        port: 9090
        path: /provider/controlplane/metrics
  ingresses:
    - enabled: true
      hostname: "materialpass.int.demo.catena-x.net"
      endpoints:
        - default
        - data
        - validation
        - control
        - ids
        - metrics
      className: "nginx"
      tls:
        # -- Enables TLS on the ingress resource
        enabled: true
        # -- If present overwrites the default secret name
        secretName: "tls-secret"
  opentelemetry:
    properties: |-
      otel.javaagent.enabled=false
      otel.javaagent.debug=false
  envSecretName: "provider-controlplane-secret"
  env:
    JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044"
    EDC_DATASOURCE_ASSET_NAME: asset
    EDC_DATASOURCE_ASSET_USER: *psqlUsername
    EDC_DATASOURCE_ASSET_URL: &psqlJdbcUrl "jdbc:postgresql://provider-postgresql:5432/edc"
    EDC_DATASOURCE_CONTRACTDEFINITION_NAME: contractdefinition
    EDC_DATASOURCE_CONTRACTDEFINITION_USER: *psqlUsername
    EDC_DATASOURCE_CONTRACTDEFINITION_URL: *psqlJdbcUrl
    EDC_DATASOURCE_CONTRACTNEGOTIATION_NAME: contractnegotiation
    EDC_DATASOURCE_CONTRACTNEGOTIATION_USER: *psqlUsername
    EDC_DATASOURCE_CONTRACTNEGOTIATION_URL: *psqlJdbcUrl
    EDC_DATASOURCE_POLICY_NAME: policy
    EDC_DATASOURCE_POLICY_USER: *psqlUsername
    EDC_DATASOURCE_POLICY_URL: *psqlJdbcUrl
    EDC_DATASOURCE_TRANSFERPROCESS_NAME: transferprocess
    EDC_DATASOURCE_TRANSFERPROCESS_USER: *psqlUsername
    EDC_DATASOURCE_TRANSFERPROCESS_URL: *psqlJdbcUrl
    EDC_DATAPLANE_SELECTOR_HTTPPROXY_PROPERTIES: >-
      {
        "publicApiUrl": "https://materialpass.int.demo.catena-x.net/provider/dataplane/api/public"
      }
  
  configuration:
    properties: |-
      #edc.api.auth.key=
      # edc.atomikos.checkpoint.interval=
      # edc.atomikos.directory=
      # edc.atomikos.logging=
      # edc.atomikos.threaded2pc=
      # edc.atomikos.timeout=
      # edc.aws.access.key=
      # edc.aws.provision.retry.retries.max=
      # edc.aws.provision.role.duration.session.max=
      # edc.aws.secret.access.key=
      # edc.blobstore.endpoint=
      # edc.controlplane.validation-endpoint=
      # edc.core.retry.backoff.max=
      # edc.core.retry.backoff.min=
      # edc.core.retry.retries.max=
      # edc.core.system.health.check.liveness-period=
      # edc.core.system.health.check.readiness-period=
      # edc.core.system.health.check.startup-period=
      # edc.core.system.health.check.threadpool-size=
      # edc.dataplane.queue.capacity=
      # edc.dataplane.wait=
      # edc.dataplane.workers=
      edc.datasource.asset.name="asset"
      edc.datasource.asset.user="postgresql_sandbox_user"
      edc.datasource.asset.url="jdbc:postgresql://provider-postgresql:5432/edc"
      
      edc.datasource.contractdefinition.name="contractdefinition"
      edc.datasource.contractdefinition.user="postgresql_sandbox_user" 
      edc.datasource.contractdefinition.url="jdbc:postgresql://provider-postgresql:5432/edc"

      edc.datasource.contractnegotiation.name="contractnegotiation"
      edc.datasource.contractnegotiation.user="postgresql_sandbox_user"
      edc.datasource.contractnegotiation.url="jdbc:postgresql://provider-postgresql:5432/edc"

      edc.datasource.policy.name="policy"
      edc.datasource.policy.user="postgresql_sandbox_user"
      edc.datasource.policy.url="jdbc:postgresql://provider-provider-postgresql:5432/edc"

      edc.datasource.transferprocess.name="transferprocess"
      edc.datasource.transferprocess.user="postgresql_sandbox_user"
      edc.datasource.transferprocess.url="jdbc:postgresql://provider-postgresql:5432/edc"

      edc.oauth.provider.jwks.url=https://daps1.int.demo.catena-x.net/.well-known/jwks.json


      # edc.datasource.default.pool.maxIdleConnections=
      # edc.datasource.default.pool.maxTotalConnections=
      # edc.datasource.default.pool.minIdleConnections=
      # edc.datasource.default.pool.testConnectionOnBorrow=
      # edc.datasource.default.pool.testConnectionOnCreate=
      # edc.datasource.default.pool.testConnectionOnReturn=
      # edc.datasource.default.pool.testConnectionWhileIdle=
      # edc.datasource.default.pool.testQuery=
      edc.datasource.default.url="jdbc:postgresql://provider-postgresql:5432/edc"
      edc.datasource.default.user="postgresql_sandbox_user"
      edc.datasource.default.password="psql_password"

      edc.data.encryption.algorithm=NONE
      edc.data.encryption.keys.alias=edc-encryption-key
      edc.dataplane.selector.httpproxy.url=http://materialpass-edc-provider-dataplane:9999/provider/dataplane/api/control

      # edc.dpf.selector.url=
      # edc.events.topic.endpoint=
      # edc.events.topic.name=
      # edc.fs.config=
      # edc.hostname=
      # edc.identity.did.url=
      # edc.ids.catalog.id=
      # edc.ids.curator=
      edc.ids.description="Provider Control Plane"
      edc.ids.endpoint=https://materialpass.int.demo.catena-x.net/provider/api/v1/ids
      edc.ids.endpoint.audience=https://materialpass.int.demo.catena-x.net/provider/api/v1/ids/data
      # edc.ids.id=
      # edc.ids.maintainer=
      # edc.ids.security.profile=
      # edc.ids.title=
      # edc.ids.validation.referringconnector=
      # edc.ion.crawler.did-type=
      # edc.ion.crawler.interval-minutes=
      # edc.ion.crawler.ion.url=
      # edc.metrics.enabled=
      # edc.metrics.executor.enabled=
      # edc.metrics.jersey.enabled=
      # edc.metrics.jetty.enabled=
      # edc.metrics.okhttp.enabled=
      # edc.metrics.system.enabled=
      # edc.negotiation.provider.state-machine.batch-size=
      # edc.negotiation.provider.state-machine.batch-size=
      edc.oauth.client.id=0D:1D:9E:E2:1C:B1:E1:61:21:40:86:02:38:FB:0A:37:18:F8:04:4E:keyid:0D:1D:9E:E2:1C:B1:E1:61:21:40:86:02:38:FB:0A:37:18:F8:04:4E
      edc.oauth.private.key.alias=ids-daps_key
      edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL
      # edc.oauth.provider.jwks.refresh=
      edc.oauth.provider.jwks.url=https://daps1.int.demo.catena-x.net/.well-known/jwks.json
      edc.oauth.public.key.alias=ids-daps_crt
      edc.oauth.token.url=https://daps1.int.demo.catena-x.net/token
      # edc.oauth.validation.nbf.leeway=
      # edc.receiver.http.auth-code=
      # edc.receiver.http.auth-key=
      edc.receiver.http.endpoint=http://materialpass-edc-provider-backend
      edc.transfer.proxy.endpoint=http://materialpass-edc-provider-dataplane:8185/provider/dataplane/api/public
      # edc.transfer.proxy.token.validity.seconds=
      edc.transfer.proxy.token.signer.privatekey.alias=ids-daps_key
      edc.transfer.proxy.token.verifier.publickey.alias=ids-daps_crt
      # edc.transfer.functions.check.endpoint=
      # edc.transfer.functions.enabled.protocols=
      # edc.transfer.functions.transfer.endpoint=
      # edc.transfer-process-store.database.name=
      # edc.transfer.state-machine.batch-size=
      # edc.vault=
      # edc.vault.certificate=
      # edc.vault.clientid=
      # edc.vault.clientsecret=
      # edc.vault.name=
      # edc.vault.tenantid=
      edc.vault.hashicorp.url=https://vault.demo.catena-x.net
      edc.vault.hashicorp.token=s.hYFLHf9sH9Qclz6iZ0iAoLIW
      edc.vault.hashicorp.api.secret.path=/v1/material-pass
      edc.vault.hashicorp.health.check.standby.ok=true
      # edc.vault.hashicorp.timeout.seconds=
      # edc.webdid.doh.url=
      # edc.web.rest.cors.enabled=
      # edc.web.rest.cors.headers=
      # edc.web.rest.cors.methods=
      # edc.web.rest.cors.origins=
      ids.webhook.address=https://materialpass.int.demo.catena-x.net
